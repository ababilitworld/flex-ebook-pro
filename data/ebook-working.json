[
  {
    "id": "0",
    "title": "Mastering Modern JavaScript",
    "details": "A practical guide to mastering ES6 and beyond.",
    "parent": "0",
    "children": ["1", "2", "3", "4", "13", "16"]
  },
  {
    "id": "1",
    "title": "Chapter 1: Introduction to JavaScript",
    "details": "Overview of JavaScript, history, and use cases.",
    "parent": "0",
    "children": ["5", "6"]
  },
  {
    "id": "2",
    "title": "Chapter 2: ES6 Fundamentals",
    "details": "Learn the key features introduced in ES6.",
    "parent": "0",
    "children": ["7", "8"]
  },
  {
    "id": "3",
    "title": "Chapter 3: Advanced Functions",
    "details": "Dive into higher-order functions, closures, and currying.",
    "parent": "0",
    "children": ["9", "10"]
  },
  {
    "id": "4",
    "title": "Chapter 4: Object-Oriented JavaScript",
    "details": "Explore classes, inheritance, and prototypes.",
    "parent": "0",
    "children": ["11", "12"]
  },
  {
    "id": "5",
    "title": "JavaScript Origins",
    "details": "The evolution from Netscape to modern frameworks.",
    "parent": "1",
    "children": []
  },
  {
    "id": "6",
    "title": "JavaScript in the Browser",
    "details": "How JavaScript integrates with HTML and CSS.",
    "parent": "1",
    "children": []
  },
  {
    "id": "7",
    "title": "Let, Const, and Block Scope",
    "details": "Why var is outdated and the block scope revolution.",
    "parent": "2",
    "children": []
  },
  {
    "id": "8",
    "title": "Arrow Functions and Template Literals",
    "details": "Concise syntax and dynamic string building.",
    "parent": "2",
    "children": []
  },
  {
    "id": "9",
    "title": "Closures and Scoping",
    "details": "How closures preserve access to variables.",
    "parent": "3",
    "children": []
  },
  {
    "id": "10",
    "title": "Currying and Composition",
    "details": "Compose functional logic with reusable code.",
    "parent": "3",
    "children": []
  },
  {
    "id": "11",
    "title": "Prototype Chain",
    "details": "How inheritance works under the hood.",
    "parent": "4",
    "children": []
  },
  {
    "id": "12",
    "title": "Classes and Modules",
    "details": "Using `class` and modularizing your app.",
    "parent": "4",
    "children": []
  },
  {
    "id": "13",
    "title": "Chapter 5: Promises and Async/Await",
    "details": "Manage async operations cleanly and effectively.",
    "parent": "0",
    "children": ["14", "15"]
  },
  {
    "id": "14",
    "title": "Understanding Promises",
    "details": "From callbacks to cleaner async handling.",
    "parent": "13",
    "children": []
  },
  {
    "id": "15",
    "title": "Async/Await Simplified",
    "details": "Read and write asynchronous code like synchronous.",
    "parent": "13",
    "children": []
  },
  {
    "id": "16",
    "title": "Chapter 6: Modules and Tooling",
    "details": "Using imports, exports, and modern tools.",
    "parent": "0",
    "children": ["17", "18"]
  },
  {
    "id": "17",
    "title": "ES Modules vs CommonJS",
    "details": "How to choose and when.",
    "parent": "16",
    "children": []
  },
  {
    "id": "18",
    "title": "Bundlers and Transpilers",
    "details": "Webpack, Babel, and building for production.",
    "parent": "16",
    "children": []
  }
]
